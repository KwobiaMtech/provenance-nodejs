"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv = require("dotenv");
const provenance_service_1 = require("../src/services/provenance.service");
dotenv.config();
describe("TRANSACTION DETAILS TEST", () => {
    let client;
    beforeAll(async () => {
        client = await provenance_service_1.Provenance.build();
    });
    const createWallet = () => {
        const wallet = client.createWallet();
        expect(wallet.privateKey).toBeDefined();
        expect(wallet.address).toBeDefined();
        expect(wallet.publicKey).toBeDefined();
        expect(wallet.mnemonicPhrase).toBeDefined();
        return wallet;
    };
    it("should return transaction details from transaction hash", async () => {
        const wallet = createWallet();
        const transaction = await client.createTransaction(process.env.ADDRESS, wallet.address, process.env.MNEMONIC_PHRASE, 1);
        expect(transaction).toBeDefined();
        expect(transaction.gasUsed).toBeDefined();
        expect(transaction.gasWanted).toBeDefined();
        expect(transaction.transactionHash).toBeDefined();
        const receiverBalance = await client.getBalance(wallet.address);
        expect(receiverBalance.amount).toEqual("1000000000");
        const transactionDetails = await client.getTransactionDetails(transaction.transactionHash);
        expect(transactionDetails).toBeDefined();
        expect(transactionDetails.amount).toEqual(1);
        expect(transactionDetails.receiverAddress).toEqual(wallet.address);
        expect(transactionDetails.senderAddress).toEqual(process.env.ADDRESS);
        expect(transactionDetails.tokenMintAddress).toEqual("nhash");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24tZGV0YWlscy5lMmUtc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3Rlc3QvdHJhbnNhY3Rpb24tZGV0YWlscy5lMmUtc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFpQztBQUNqQywyRUFBZ0U7QUFHaEUsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRWhCLFFBQVEsQ0FBQywwQkFBMEIsRUFBRSxHQUFHLEVBQUU7SUFDdEMsSUFBSSxNQUFrQixDQUFDO0lBQ3ZCLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNuQixNQUFNLEdBQUcsTUFBTSwrQkFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBR0wsTUFBTSxZQUFZLEdBQUcsR0FBRyxFQUFFO1FBQ3hCLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNyQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDckMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2QyxNQUFNLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzVDLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQztJQUVGLEVBQUUsQ0FBQyx5REFBeUQsRUFBRSxLQUFLLElBQUksRUFBRTtRQUN2RSxNQUFNLE1BQU0sR0FBRyxZQUFZLEVBQUUsQ0FBQztRQUM5QixNQUFNLFdBQVcsR0FBRyxNQUFNLE1BQU0sQ0FBQyxpQkFBaUIsQ0FDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQ25CLE1BQU0sQ0FBQyxPQUFPLEVBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQzNCLENBQUMsQ0FDRixDQUFDO1FBQ0YsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDMUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM1QyxNQUFNLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRWxELE1BQU0sZUFBZSxHQUFHLE1BQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEUsTUFBTSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFckQsTUFBTSxrQkFBa0IsR0FDdEIsTUFBTSxNQUFNLENBQUMscUJBQXFCLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2xFLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0MsTUFBTSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkUsTUFBTSxDQUFDLGtCQUFrQixDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3RFLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcbmltcG9ydCB7IFByb3ZlbmFuY2UgfSBmcm9tIFwiLi4vc3JjL3NlcnZpY2VzL3Byb3ZlbmFuY2Uuc2VydmljZVwiO1xuaW1wb3J0IHsgUHJvdmVuYW5jZVRyYW5zYWN0aW9uRGV0YWlscyB9IGZyb20gXCJpbmRleFwiO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbmRlc2NyaWJlKFwiVFJBTlNBQ1RJT04gREVUQUlMUyBURVNUXCIsICgpID0+IHtcbiAgICBsZXQgY2xpZW50OiBQcm92ZW5hbmNlO1xuICAgIGJlZm9yZUFsbChhc3luYyAoKSA9PiB7XG4gICAgICBjbGllbnQgPSBhd2FpdCBQcm92ZW5hbmNlLmJ1aWxkKCk7XG4gICAgfSk7XG4gIFxuXG4gIGNvbnN0IGNyZWF0ZVdhbGxldCA9ICgpID0+IHtcbiAgICBjb25zdCB3YWxsZXQgPSBjbGllbnQuY3JlYXRlV2FsbGV0KCk7XG4gICAgZXhwZWN0KHdhbGxldC5wcml2YXRlS2V5KS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh3YWxsZXQuYWRkcmVzcykudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3Qod2FsbGV0LnB1YmxpY0tleSkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3Qod2FsbGV0Lm1uZW1vbmljUGhyYXNlKS50b0JlRGVmaW5lZCgpO1xuICAgIHJldHVybiB3YWxsZXQ7XG4gIH07XG5cbiAgaXQoXCJzaG91bGQgcmV0dXJuIHRyYW5zYWN0aW9uIGRldGFpbHMgZnJvbSB0cmFuc2FjdGlvbiBoYXNoXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB3YWxsZXQgPSBjcmVhdGVXYWxsZXQoKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IGNsaWVudC5jcmVhdGVUcmFuc2FjdGlvbihcbiAgICAgIHByb2Nlc3MuZW52LkFERFJFU1MsXG4gICAgICB3YWxsZXQuYWRkcmVzcyxcbiAgICAgIHByb2Nlc3MuZW52Lk1ORU1PTklDX1BIUkFTRSxcbiAgICAgIDFcbiAgICApO1xuICAgIGV4cGVjdCh0cmFuc2FjdGlvbikudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodHJhbnNhY3Rpb24uZ2FzVXNlZCkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodHJhbnNhY3Rpb24uZ2FzV2FudGVkKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0cmFuc2FjdGlvbi50cmFuc2FjdGlvbkhhc2gpLnRvQmVEZWZpbmVkKCk7XG5cbiAgICBjb25zdCByZWNlaXZlckJhbGFuY2UgPSBhd2FpdCBjbGllbnQuZ2V0QmFsYW5jZSh3YWxsZXQuYWRkcmVzcyk7XG4gICAgZXhwZWN0KHJlY2VpdmVyQmFsYW5jZS5hbW91bnQpLnRvRXF1YWwoXCIxMDAwMDAwMDAwXCIpO1xuXG4gICAgY29uc3QgdHJhbnNhY3Rpb25EZXRhaWxzOiBQcm92ZW5hbmNlVHJhbnNhY3Rpb25EZXRhaWxzID1cbiAgICAgIGF3YWl0IGNsaWVudC5nZXRUcmFuc2FjdGlvbkRldGFpbHModHJhbnNhY3Rpb24udHJhbnNhY3Rpb25IYXNoKTtcbiAgICBleHBlY3QodHJhbnNhY3Rpb25EZXRhaWxzKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0cmFuc2FjdGlvbkRldGFpbHMuYW1vdW50KS50b0VxdWFsKDEpO1xuICAgIGV4cGVjdCh0cmFuc2FjdGlvbkRldGFpbHMucmVjZWl2ZXJBZGRyZXNzKS50b0VxdWFsKHdhbGxldC5hZGRyZXNzKTtcbiAgICBleHBlY3QodHJhbnNhY3Rpb25EZXRhaWxzLnNlbmRlckFkZHJlc3MpLnRvRXF1YWwocHJvY2Vzcy5lbnYuQUREUkVTUyk7XG4gICAgZXhwZWN0KHRyYW5zYWN0aW9uRGV0YWlscy50b2tlbk1pbnRBZGRyZXNzKS50b0VxdWFsKFwibmhhc2hcIik7XG4gIH0pO1xufSk7XG4iXX0=